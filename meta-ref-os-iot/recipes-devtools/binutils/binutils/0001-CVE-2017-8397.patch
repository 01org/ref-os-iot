From 0346e9205085183c83b0d776df8cd56ad86bc14c Mon Sep 17 00:00:00 2001
From: Matti Paasto <matti.paasto@intel.com>
Date: Wed, 24 May 2017 11:18:48 +0300
Subject: [PATCH] CVE-2017-8397

From: Nick Clifton <nickc@redhat.com>
Date: Wed, 26 Apr 2017 16:30:22 +0100
Subject: [PATCH] Fix a seg-fault when processing a corrupt binary containing
 reloc(s) with negative addresses.

	PR binutils/21434
	* reloc.c (bfd_perform_relocation): Check for a negative address
	in the reloc.

Signed-off-by: Matti Paasto <matti.paasto@intel.com>
---
 bfd/reloc.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/bfd/reloc.c b/bfd/reloc.c
index 9021a52..a8828c9 100644
--- a/bfd/reloc.c
+++ b/bfd/reloc.c
@@ -624,7 +624,10 @@ bfd_perform_relocation (bfd *abfd,
      PR 17512: file: c146ab8b, 46dff27f, 38e53ebf.  */
   octets = reloc_entry->address * bfd_octets_per_byte (abfd);
   if (octets + bfd_get_reloc_size (howto)
-      > bfd_get_section_limit_octets (abfd, input_section))
+      > bfd_get_section_limit_octets (abfd, input_section)
+      /* Check for an overly large offset which
+	 masquerades as a negative value too.  */
+      || (octets + bfd_get_reloc_size (howto) < bfd_get_reloc_size (howto)))
     return bfd_reloc_outofrange;
 
   /* Work out which section the relocation is targeted at and the
-- 
2.7.4

