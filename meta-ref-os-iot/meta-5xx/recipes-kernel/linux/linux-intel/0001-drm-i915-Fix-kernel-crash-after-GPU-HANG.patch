From 6deca766da102399916de237c69df084c280ee65 Mon Sep 17 00:00:00 2001
From: Jukka Laitinen <jukka.laitinen@intel.com>
Date: Thu, 15 Jun 2017 14:26:00 +0300
Subject: [PATCH 1/3] drm/i915: Fix kernel crash after GPU HANG

While using execlists without any display attached, there is a kernel crash
observed with intel joule compute module (gen9 gpu).

The crash happens while resetting the gpu, in reset_common_ring(), where
port[0].request can be NULL.

This doesn't solve the actual GPU HANG issue leading to this situation, but
it is not acceptable to crash the whole kernel for it.

A snippet of the crash dump:

[   84.902889] drm/i915: Resetting chip after gpu hang
[   84.910547] BUG: unable to handle kernel NULL pointer dereference at 0000000000000070
[   84.919385] IP: [<ffffffffa022e4c2>] reset_common_ring+0xa2/0x130 [i915]
[   84.926941] PGD 0 [   84.928998]
[   84.930670] Oops: 0000 [#1] PREEMPT SMP

Signed-off-by: Jukka Laitinen <jukka.laitinen@intel.com>
---
 drivers/gpu/drm/i915/intel_lrc.c | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_lrc.c b/drivers/gpu/drm/i915/intel_lrc.c
index c1bf431..f423558 100644
--- a/drivers/gpu/drm/i915/intel_lrc.c
+++ b/drivers/gpu/drm/i915/intel_lrc.c
@@ -1391,14 +1391,15 @@ static void reset_common_ring(struct intel_engine_cs *engine,
 		return;
 
 	/* Catch up with any missed context-switch interrupts */
-	if (request->ctx != port[0].request->ctx) {
-		i915_gem_request_put(port[0].request);
-		port[0] = port[1];
-		memset(&port[1], 0, sizeof(port[1]));
+	if(port && port[0].request) {
+		if (request->ctx != port[0].request->ctx) {
+			i915_gem_request_put(port[0].request);
+			port[0] = port[1];
+			memset(&port[1], 0, sizeof(port[1]));
+		}
+		GEM_BUG_ON(request->ctx != port[0].request->ctx);
 	}
 
-	GEM_BUG_ON(request->ctx != port[0].request->ctx);
-
 	/* Reset WaIdleLiteRestore:bdw,skl as well */
 	request->tail = request->wa_tail - WA_TAIL_DWORDS * sizeof(u32);
 }
-- 
2.7.4

