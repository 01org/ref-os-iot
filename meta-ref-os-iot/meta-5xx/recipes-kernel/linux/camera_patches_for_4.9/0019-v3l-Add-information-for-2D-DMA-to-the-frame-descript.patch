From 00fc4d7afc88d1cf943c0b9cf51884e22fc293d4 Mon Sep 17 00:00:00 2001
From: Sakari Ailus <sakari.ailus@linux.intel.com>
Date: Wed, 22 Mar 2017 08:15:10 +0530
Subject: [PATCH 19/42] v3l: Add information for 2D DMA to the frame descriptor
 entries

Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
---
 drivers/media/i2c/m5mols/m5mols_core.c           | 10 +++++-----
 drivers/media/i2c/s5c73m3/s5c73m3-core.c         |  6 +++---
 drivers/media/platform/exynos4-is/fimc-capture.c |  8 ++++----
 include/media/v4l2-subdev.h                      | 14 +++++++++++++-
 4 files changed, 25 insertions(+), 13 deletions(-)

diff --git a/drivers/media/i2c/m5mols/m5mols_core.c b/drivers/media/i2c/m5mols/m5mols_core.c
index acb804b..d739bd8 100644
--- a/drivers/media/i2c/m5mols/m5mols_core.c
+++ b/drivers/media/i2c/m5mols/m5mols_core.c
@@ -607,7 +607,7 @@ static int m5mols_get_frame_desc(struct v4l2_subdev *sd, unsigned int pad,
 	 * .get_frame_desc is only used for compressed formats,
 	 * thus we always return the capture frame parameters here.
 	 */
-	fd->entry[0].length = info->cap.buf_size;
+	fd->entry[0].size.length = info->cap.buf_size;
 	fd->entry[0].pixelcode = info->ffmt[M5MOLS_RESTYPE_CAPTURE].code;
 	mutex_unlock(&info->lock);
 
@@ -628,11 +628,11 @@ static int m5mols_set_frame_desc(struct v4l2_subdev *sd, unsigned int pad,
 
 	fd->entry[0].flags = V4L2_MBUS_FRAME_DESC_FL_LEN_MAX;
 	fd->num_entries = 1;
-	fd->entry[0].length = clamp_t(u32, fd->entry[0].length,
-				      mf->width * mf->height,
-				      M5MOLS_MAIN_JPEG_SIZE_MAX);
+	fd->entry[0].size.length = clamp_t(u32, fd->entry[0].size.length,
+					   mf->width * mf->height,
+					   M5MOLS_MAIN_JPEG_SIZE_MAX);
 	mutex_lock(&info->lock);
-	info->cap.buf_size = fd->entry[0].length;
+	info->cap.buf_size = fd->entry[0].size.length;
 	mutex_unlock(&info->lock);
 
 	return 0;
diff --git a/drivers/media/i2c/s5c73m3/s5c73m3-core.c b/drivers/media/i2c/s5c73m3/s5c73m3-core.c
index 3844853..0b4f1ce 100644
--- a/drivers/media/i2c/s5c73m3/s5c73m3-core.c
+++ b/drivers/media/i2c/s5c73m3/s5c73m3-core.c
@@ -1176,9 +1176,9 @@ static int s5c73m3_oif_set_frame_desc(struct v4l2_subdev *sd, unsigned int pad,
 	if (pad != OIF_SOURCE_PAD || fd == NULL)
 		return -EINVAL;
 
-	fd->entry[0].length = 10 * SZ_1M;
-	fd->entry[1].length = max_t(u32, fd->entry[1].length,
-				    S5C73M3_EMBEDDED_DATA_MAXLEN);
+	fd->entry[0].size.length = 10 * SZ_1M;
+	fd->entry[1].size.length = max_t(u32, fd->entry[1].size.length,
+					 S5C73M3_EMBEDDED_DATA_MAXLEN);
 	fd->num_entries = 2;
 
 	mutex_lock(&state->lock);
diff --git a/drivers/media/platform/exynos4-is/fimc-capture.c b/drivers/media/platform/exynos4-is/fimc-capture.c
index 964f4a6..1e92c52 100644
--- a/drivers/media/platform/exynos4-is/fimc-capture.c
+++ b/drivers/media/platform/exynos4-is/fimc-capture.c
@@ -871,7 +871,7 @@ static int fimc_get_sensor_frame_desc(struct v4l2_subdev *sensor,
 	int pad;
 
 	for (i = 0; i < num_planes; i++)
-		fd.entry[i].length = plane_fmt[i].sizeimage;
+		fd.entry[i].size.length = plane_fmt[i].sizeimage;
 
 	pad = sensor->entity.num_pads - 1;
 	if (try)
@@ -886,11 +886,11 @@ static int fimc_get_sensor_frame_desc(struct v4l2_subdev *sensor,
 		return -EINVAL;
 
 	for (i = 0; i < num_planes; i++)
-		plane_fmt[i].sizeimage = fd.entry[i].length;
+		plane_fmt[i].sizeimage = fd.entry[i].size.length;
 
-	if (fd.entry[0].length > FIMC_MAX_JPEG_BUF_SIZE) {
+	if (fd.entry[0].size.length > FIMC_MAX_JPEG_BUF_SIZE) {
 		v4l2_err(sensor->v4l2_dev,  "Unsupported buffer size: %u\n",
-			 fd.entry[0].length);
+			 fd.entry[0].size.length);
 
 		return -EINVAL;
 	}
diff --git a/include/media/v4l2-subdev.h b/include/media/v4l2-subdev.h
index 5575fa1..ce1946d 100644
--- a/include/media/v4l2-subdev.h
+++ b/include/media/v4l2-subdev.h
@@ -311,6 +311,10 @@ struct v4l2_mbus_frame_desc_entry_csi2 {
  * @flags: bitmask flags: %V4L2_MBUS_FRAME_DESC_FL_LEN_MAX and
  *			  %V4L2_MBUS_FRAME_DESC_FL_BLOB.
  * @pixelcode: media bus pixel code, valid if FRAME_DESC_FL_BLOB is not set
+ * @start_line: start line of the data for 2D DMA
+ * @start_pixel: start pixel of the data for 2D DMA
+ * @width: image width for 2D DMA
+ * @height: image height for 2D DMA
  * @length: number of octets per frame, valid if V4L2_MBUS_FRAME_DESC_FL_BLOB
  *	    is set
  */
@@ -318,7 +322,15 @@ struct v4l2_mbus_frame_desc_entry {
 	u16 flags;
 	u8 bpp;
 	u32 pixelcode;
-	u32 length;
+	union {
+		struct {
+			u16 start_line;
+			u16 start_pixel;
+			u16 width;
+			u16 height;
+		} two_dim;
+		u32 length;
+	} size;
 	union {
 		struct v4l2_mbus_frame_desc_entry_csi2 csi2;
 	} bus;
-- 
2.7.4

